/**
 * Santa Sudoku CSS
 */
/**
 * I don't use reset.css anymore. It's too strong of a style neutralizer, and
 * oftentimes a few styles that it neutralizes has to be re-declared, like list
 * styles. Normalize.css ensures a few basic styles to get things started, even if
 * the basic styles might be overwritten later.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block; }

audio,
canvas,
video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

html {
  background: white;
  color: black;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

html,
button,
input,
select,
textarea {
  font-family: sans-serif; }

body {
  margin: 0; }

a {
  background: transparent; }
  a:focus {
    outline: thin dotted; }
  a:hover, a:active {
    outline: 0; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

h2 {
  font-size: 1.5em;
  margin: 0.83em 0; }

h3 {
  font-size: 1.17em;
  margin: 1em 0; }

h4 {
  font-size: 1em;
  margin: 1.33em 0; }

h5 {
  font-size: 0.83em;
  margin: 1.67em 0; }

h6 {
  font-size: 0.75em;
  margin: 2.33em 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

q:before, q:after {
  content: '';
  content: none; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 0; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0;
  white-space: normal; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline; }

button, input {
  line-height: normal; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto;
  vertical-align: top; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }
  input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

/**
 * Note on HSL:
 * I used to work exclusively with RGB, and can actually calculate from decimal
 * to hex and back pretty easily. HSL is easier to tweak on-the-fly though; if
 * I need to go from, say, light gray to dark gray, I just need to adjust the L
 * value, rather than change three values in RGB. Changing hues is easier too.
 */
body {
  background-color: #fffdfa;
  color: #333333;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; }

/**
 * This gets rid of the spinner arrows on number inputs. They were off-centering
 * the text within.
 */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

.wrapper {
  padding: 20px 0; }
  .wrapper .outer-wrap {
    width: 90%;
    margin: 0 auto;
    text-align: center; }
  .wrapper .sudoku-wrap {
    width: 100%;
    position: relative; }
    .wrapper .sudoku-wrap:after {
      padding-top: 100%;
      display: block;
      content: ''; }
  .wrapper .board-wrap {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    border: 3px solid #d9d9d9;
    border-radius: 10px;
    overflow: hidden; }

.sudoku {
  width: 100%;
  height: 100%; }
  .sudoku tr:nth-child(3) .cell, .sudoku tr:nth-child(6) .cell {
    border-bottom: 3px solid #d9d9d9; }
  .sudoku tr:nth-child(9) .cell {
    border-bottom: none; }
  .sudoku tr:nth-child(odd) .cell:nth-child(even), .sudoku tr:nth-child(even) .cell:nth-child(odd) {
    background-color: #ffcccc; }
  .sudoku tr:nth-child(even) .cell:nth-child(even), .sudoku tr:nth-child(odd) .cell:nth-child(odd) {
    background-color: #ccffcc; }
  .sudoku .cell {
    border-bottom: 2px dotted #d9d9d9;
    border-right: 2px dotted #d9d9d9; }
    .sudoku .cell:nth-child(3), .sudoku .cell:nth-child(6) {
      border-right: 3px solid #d9d9d9; }
    .sudoku .cell:nth-child(9) {
      border-right: none; }
    .sudoku .cell input {
      width: 100%;
      height: 100%;
      background: none;
      border: none;
      text-align: center; }
      .sudoku .cell input.invalid {
        color: #df2020; }

/** Santa sprite. Ho Ho Ho */
.santa {
  width: 100%;
  height: 0;
  padding-bottom: 40%;
  max-width: 600px;
  margin: 0 auto 1em;
  background: url(/img/santa_neutral.gif) center no-repeat;
  background-size: contain; }
  .santa.coal {
    background-image: url(/img/santa_bad.gif); }
  .santa.merry-christmas {
    background-image: url(/img/santa_happy.gif); }

/**
 * If the screen is of a certain width, the board should take up a little less
 * space.
 */
@media only screen and (min-width: 1024px) {
  .outer-wrap {
    width: 80%;
    max-width: 600px; }

  .sudoku input {
    font-size: 2.5em; } }
